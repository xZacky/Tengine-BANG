INCLUDE (FindPackageHandleStandardArgs)

SET (_INC_SEARCH_PATH)
LIST (APPEND _INC_SEARCH_PATH "/usr/local/neuware/include")
LIST (APPEND _INC_SEARCH_PATH $ENV{CNTOOLKIT_ROOT}/include)

SET (_LIB_SEARCH_PATH)
LIST (APPEND _LIB_SEARCH_PATH "/usr/local/neuware/lib64")
LIST (APPEND _LIB_SEARCH_PATH $ENV{CNTOOLKIT_ROOT}/lib64)

# find cnnl.h
FIND_PATH (CNNL_INCLUDE_DIR cnnl.h PATHS ${_INC_SEARCH_PATH} DOC "location of cnnl.h" NO_DEFAULT_PATH)

# find libcnnl.so
FIND_PATH (CNNL_LIBRARY_DIR libcnnl.so PATHS ${_LIB_SEARCH_PATH} DOC "location of libcnnl.so" NO_DEFAULT_PATH)

# link cnnl
SET(CNNL_LIBRARY cnnl)

# make args
FIND_PACKAGE_HANDLE_STANDARD_ARGS (
    CNNL
    FOUND_VAR
        CNNL_FOUND
    REQUIRED_VARS
        CNNL_INCLUDE_DIR
        CNNL_LIBRARY_DIR
        CNNL_LIBRARY
)

MARK_AS_ADVANCED (
    CNNL_INCLUDE_DIR
    CNNL_LIBRARY
    CNNL_LIBRARY_DIR
)

IF (CNNL_FOUND AND NOT TARGET CNNL::CNNL)
    ADD_LIBRARY (CNNL::CNNL INTERFACE IMPORTED)
    SET_TARGET_PROPERTIES (CNNL::CNNL PROPERTIES INTERFACE_LINK_LIBRARIES   ${CNNL_LIBRARY})
    SET_TARGET_PROPERTIES (CNNL::CNNL PROPERTIES INTERFACE_LINK_DIRECTORIES ${CNNL_LIBRARY_DIR})
    SET_TARGET_PROPERTIES (CNNL::CNNL PROPERTIES INTERFACE_INCLUDE_DIRECTORIES ${CNNL_INCLUDE_DIR})
ENDIF()
